{"version":3,"file":"rectangleExtras.mjs","sources":["../src/rectangleExtras.ts"],"sourcesContent":["import { Rectangle } from '@pixi/core';\n\n/**\n * Determines whether the `other` Rectangle is contained within `this` Rectangle object.\n * Rectangles that occupy the same space are considered to be containing each other.\n * Rectangles without area (width or height equal to zero) can't contain anything,\n * not even other arealess rectangles.\n *\n * _Note: Only available with **@pixi/math-extras**._\n * @method containsRect\n * @memberof PIXI.Rectangle#\n * @param {Rectangle} other - The Rectangle to fit inside `this`.\n * @returns {boolean} A value of `true` if `this` Rectangle contains `other`; otherwise `false`.\n */\nRectangle.prototype.containsRect = function containsRect(other: Rectangle): boolean\n{\n    if (other.width <= 0 || other.height <= 0)\n    {\n        return other.x > this.x && other.y > this.y && other.right < this.right && other.bottom < this.bottom;\n    }\n\n    return other.x >= this.x && other.y >= this.y && other.right <= this.right && other.bottom <= this.bottom;\n};\n\n/**\n * Accepts `other` Rectangle and returns true if the given Rectangle is equal to `this` Rectangle.\n *\n * _Note: Only available with **@pixi/math-extras**._\n * @method equals\n * @memberof PIXI.Rectangle#\n * @param {Rectangle} other - The Rectangle to compare with `this`\n * @returns {boolean} Returns true if all `x`, `y`, `width`, and `height` are equal.\n */\nRectangle.prototype.equals = function equals(other: Rectangle): boolean\n{\n    if (other === this)\n    {\n        return true;\n    }\n\n    return other && this.x === other.x && this.y === other.y && this.width === other.width && this.height === other.height;\n};\n\n/**\n * If the area of the intersection between the Rectangles `other` and `this` is not zero,\n * returns the area of intersection as a Rectangle object. Otherwise, return an empty Rectangle\n * with its properties set to zero.\n * Rectangles without area (width or height equal to zero) can't intersect or be intersected\n * and will always return an empty rectangle with its properties set to zero.\n *\n * _Note: Only available with **@pixi/math-extras**._\n * @method intersection\n * @memberof PIXI.Rectangle#\n * @param {Rectangle} other - The Rectangle to intersect with `this`.\n * @param {Rectangle} [outRect] - A Rectangle object in which to store the value,\n * optional (otherwise will create a new Rectangle).\n * @returns {Rectangle} The intersection of `this` and `other`.\n */\nRectangle.prototype.intersection = function intersection<T extends Rectangle>(other: Rectangle, outRect?: T): T\n{\n    if (!outRect)\n    {\n        outRect = new Rectangle() as T;\n    }\n\n    const x0 = this.x < other.x ? other.x : this.x;\n    const x1 = this.right > other.right ? other.right : this.right;\n\n    if (x1 <= x0)\n    {\n        outRect.x = outRect.y = outRect.width = outRect.height = 0;\n\n        return outRect;\n    }\n\n    const y0 = this.y < other.y ? other.y : this.y;\n    const y1 = this.bottom > other.bottom ? other.bottom : this.bottom;\n\n    if (y1 <= y0)\n    {\n        outRect.x = outRect.y = outRect.width = outRect.height = 0;\n\n        return outRect;\n    }\n\n    outRect.x = x0;\n    outRect.y = y0;\n    outRect.width = x1 - x0;\n    outRect.height = y1 - y0;\n\n    return outRect;\n};\n\n/**\n * Adds `this` and `other` Rectangles together to create a new Rectangle object filling\n * the horizontal and vertical space between the two rectangles.\n *\n * _Note: Only available with **@pixi/math-extras**._\n * @method union\n * @memberof PIXI.Rectangle#\n * @param {Rectangle} other - The Rectangle to unite with `this`.\n * @param {Rectangle} [outRect] - A Rectangle object in which to store the value,\n * optional (otherwise will create a new Rectangle).\n * @returns {Rectangle} The union of `this` and `other`.\n */\nRectangle.prototype.union = function union<T extends Rectangle>(other: Rectangle, outRect?: T): T\n{\n    if (!outRect)\n    {\n        outRect = new Rectangle() as T;\n    }\n\n    const x1 = Math.min(this.x, other.x);\n    const x2 = Math.max(this.x + this.width, other.x + other.width);\n    const y1 = Math.min(this.y, other.y);\n    const y2 = Math.max(this.y + this.height, other.y + other.height);\n\n    outRect.x = x1;\n    outRect.y = y1;\n    outRect.width = x2 - x1;\n    outRect.height = y2 - y1;\n\n    return outRect;\n};\n"],"names":[],"mappings":"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"}